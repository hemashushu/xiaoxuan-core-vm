// Copyright (c) 2023 Hemashushu <hippospark@gmail.com>, All rights reserved.
//
// This Source Code Form is subject to the terms of
// the Mozilla Public License version 2.0 and additional exceptions,
// more details in file LICENSE, LICENSE.additional and CONTRIBUTING.

use crate::opcode::Opcode;

impl Opcode {
    pub fn get_name(&self) -> &'static str {
        match self {
            Opcode::nop => "nop",
            // Opcode::zero => "zero",
            // Opcode::drop => "drop",
            // Opcode::duplicate => "duplicate",
            // Opcode::swap => "swap",
            // Opcode::select_nez => "select_nez",
            //
            Opcode::imm_i32 => "imm_i32",
            Opcode::imm_i64 => "imm_i64",
            Opcode::imm_f32 => "imm_f32",
            Opcode::imm_f64 => "imm_f64",
            //
            Opcode::data_load_i64 => "data_load_i64",
            Opcode::data_load_i32_s => "data_load_i32_s",
            Opcode::data_load_i32_u => "data_load_i32_u",
            Opcode::data_load_i16_s => "data_load_i16_s",
            Opcode::data_load_i16_u => "data_load_i16_u",
            Opcode::data_load_i8_s => "data_load_i8_s",
            Opcode::data_load_i8_u => "data_load_i8_u",
            Opcode::data_load_f64 => "data_load_f64",
            Opcode::data_load_f32 => "data_load_f32",
            Opcode::data_store_i64 => "data_store_i64",
            Opcode::data_store_i32 => "data_store_i32",
            Opcode::data_store_i16 => "data_store_i16",
            Opcode::data_store_i8 => "data_store_i8",
            Opcode::data_store_f64 => "data_store_f64",
            Opcode::data_store_f32 => "data_store_f32",
            //
            Opcode::data_extend_load_i64 => "data_extend_load_i64",
            Opcode::data_extend_load_i32_s => "data_extend_load_i32_s",
            Opcode::data_extend_load_i32_u => "data_extend_load_i32_u",
            Opcode::data_extend_load_i16_s => "data_extend_load_i16_s",
            Opcode::data_extend_load_i16_u => "data_extend_load_i16_u",
            Opcode::data_extend_load_i8_s => "data_extend_load_i8_s",
            Opcode::data_extend_load_i8_u => "data_extend_load_i8_u",
            Opcode::data_extend_load_f64 => "data_extend_load_f64",
            Opcode::data_extend_load_f32 => "data_extend_load_f32",
            Opcode::data_extend_store_i64 => "data_extend_store_i64",
            Opcode::data_extend_store_i32 => "data_extend_store_i32",
            Opcode::data_extend_store_i16 => "data_extend_store_i16",
            Opcode::data_extend_store_i8 => "data_extend_store_i8",
            Opcode::data_extend_store_f64 => "data_extend_store_f64",
            Opcode::data_extend_store_f32 => "data_extend_store_f32",
            //
            Opcode::local_load_i64 => "local_load_64",
            Opcode::local_load_i32_s => "local_load_i32_s",
            Opcode::local_load_i32_u => "local_load_i32_u",
            Opcode::local_load_i16_s => "local_load_i16_s",
            Opcode::local_load_i16_u => "local_load_i16_u",
            Opcode::local_load_i8_s => "local_load_i8_s",
            Opcode::local_load_i8_u => "local_load_i8_u",
            Opcode::local_load_f64 => "local_load_f64",
            Opcode::local_load_f32 => "local_load_f32",
            Opcode::local_store_i64 => "local_store_i64",
            Opcode::local_store_i32 => "local_store_i32",
            Opcode::local_store_i16 => "local_store_i16",
            Opcode::local_store_i8 => "local_store_i8",
            Opcode::local_store_f64 => "local_store_f64",
            Opcode::local_store_f32 => "local_store_f32",
            //
            Opcode::local_extend_load_i64 => "local_extend_load_i64",
            Opcode::local_extend_load_i32_s => "local_extend_load_i32_s",
            Opcode::local_extend_load_i32_u => "local_extend_load_i32_u",
            Opcode::local_extend_load_i16_s => "local_extend_load_i16_s",
            Opcode::local_extend_load_i16_u => "local_extend_load_i16_u",
            Opcode::local_extend_load_i8_s => "local_extend_load_i8_s",
            Opcode::local_extend_load_i8_u => "local_extend_load_i8_u",
            Opcode::local_extend_load_f64 => "local_extend_load_f64",
            Opcode::local_extend_load_f32 => "local_extend_load_f32",
            Opcode::local_extend_store_i64 => "local_extend_store_i64",
            Opcode::local_extend_store_i32 => "local_extend_store_i32",
            Opcode::local_extend_store_i16 => "local_extend_store_i16",
            Opcode::local_extend_store_i8 => "local_extend_store_i8",
            Opcode::local_extend_store_f64 => "local_extend_store_f64",
            Opcode::local_extend_store_f32 => "local_extend_store_f32",
            //
            Opcode::heap_load_i64 => "heap_load_i64",
            Opcode::heap_load_i32_s => "heap_load_i32_s",
            Opcode::heap_load_i32_u => "heap_load_i32_u",
            Opcode::heap_load_i16_s => "heap_load_i16_s",
            Opcode::heap_load_i16_u => "heap_load_i16_u",
            Opcode::heap_load_i8_s => "heap_load_i8_s",
            Opcode::heap_load_i8_u => "heap_load_i8_u",
            Opcode::heap_load_f64 => "heap_load_f64",
            Opcode::heap_load_f32 => "heap_load_f32",
            Opcode::heap_store_i64 => "heap_store_i64",
            Opcode::heap_store_i32 => "heap_store_i32",
            Opcode::heap_store_i16 => "heap_store_i16",
            Opcode::heap_store_i8 => "heap_store_i8",
            Opcode::heap_store_f64 => "heap_store_f64",
            Opcode::heap_store_f32 => "heap_store_f32",
            //
            Opcode::heap_bound_load_i64 => "heap_bound_load_i64",
            Opcode::heap_bound_load_i32_s => "heap_bound_load_i32_s",
            Opcode::heap_bound_load_i32_u => "heap_bound_load_i32_u",
            Opcode::heap_bound_load_i16_s => "heap_bound_load_i16_s",
            Opcode::heap_bound_load_i16_u => "heap_bound_load_i16_u",
            Opcode::heap_bound_load_i8_s => "heap_bound_load_i8_s",
            Opcode::heap_bound_load_i8_u => "heap_bound_load_i8_u",
            Opcode::heap_bound_load_f64 => "heap_bound_load_f64",
            Opcode::heap_bound_load_f32 => "heap_bound_load_f32",
            Opcode::heap_bound_store_i64 => "heap_bound_store_i64",
            Opcode::heap_bound_store_i32 => "heap_bound_store_i32",
            Opcode::heap_bound_store_i16 => "heap_bound_store_i16",
            Opcode::heap_bound_store_i8 => "heap_bound_store_i8",
            Opcode::heap_bound_store_f64 => "heap_bound_store_f64",
            Opcode::heap_bound_store_f32 => "heap_bound_store_f32",
            //
            Opcode::heap_fill => "heap_fill",
            Opcode::heap_copy => "heap_copy",
            Opcode::heap_capacity => "heap_capacity",
            Opcode::heap_resize => "heap_resize",
            //
            Opcode::truncate_i64_to_i32 => "truncate_i64_to_i32",
            Opcode::extend_i32_s_to_i64 => "extend_i32_s_to_i64",
            Opcode::extend_i32_u_to_i64 => "extend_i32_u_to_i64",
            Opcode::demote_f64_to_f32 => "demote_f64_to_f32",
            Opcode::promote_f32_to_f64 => "promote_f32_to_f64",
            //
            Opcode::convert_f32_to_i32_s => "convert_f32_to_i32_s",
            Opcode::convert_f32_to_i32_u => "convert_f32_to_i32_u",
            Opcode::convert_f64_to_i32_s => "convert_f64_to_i32_s",
            Opcode::convert_f64_to_i32_u => "convert_f64_to_i32_u",
            Opcode::convert_f32_to_i64_s => "convert_f32_to_i64_s",
            Opcode::convert_f32_to_i64_u => "convert_f32_to_i64_u",
            Opcode::convert_f64_to_i64_s => "convert_f64_to_i64_s",
            Opcode::convert_f64_to_i64_u => "convert_f64_to_i64_u",
            //
            Opcode::convert_i32_s_to_f32 => "convert_i32_s_to_f32",
            Opcode::convert_i32_u_to_f32 => "convert_i32_u_to_f32",
            Opcode::convert_i64_s_to_f32 => "convert_i64_s_to_f32",
            Opcode::convert_i64_u_to_f32 => "convert_i64_u_to_f32",
            Opcode::convert_i32_s_to_f64 => "convert_i32_s_to_f64",
            Opcode::convert_i32_u_to_f64 => "convert_i32_u_to_f64",
            Opcode::convert_i64_s_to_f64 => "convert_i64_s_to_f64",
            Opcode::convert_i64_u_to_f64 => "convert_i64_u_to_f64",
            //
            Opcode::compare_eqz => "compare_eqz",
            Opcode::compare_not_eqz => "compare_not_eqz",
            Opcode::compare_eq => "compare_eq",
            Opcode::compare_ne => "compare_ne",
            Opcode::compare_lt_s => "compare_lt_s",
            Opcode::compare_lt_u => "compare_lt_u",
            Opcode::compare_gt_s => "compare_gt_s",
            Opcode::compare_gt_u => "compare_gt_u",
            Opcode::compare_le_s => "compare_le_s",
            Opcode::compare_le_u => "compare_le_u",
            Opcode::compare_ge_s => "compare_ge_s",
            Opcode::compare_ge_u => "compare_ge_u",
            // Opcode::i64_eqz => "i64.eqz",
            // Opcode::i64_nez => "i64.nez",
            // Opcode::i64_eq => "i64.eq",
            // Opcode::i64_ne => "i64.ne",
            // Opcode::i64_lt_s => "i64.lt_s",
            // Opcode::i64_lt_u => "i64.lt_u",
            // Opcode::i64_gt_s => "i64.gt_s",
            // Opcode::i64_gt_u => "i64.gt_u",
            // Opcode::i64_le_s => "i64.le_s",
            // Opcode::i64_le_u => "i64.le_u",
            // Opcode::i64_ge_s => "i64.ge_s",
            // Opcode::i64_ge_u => "i64.ge_u",
            Opcode::compare_eq_f32 => "compare_eq_f32",
            Opcode::compare_ne_f32 => "compare_ne_f32",
            Opcode::compare_lt_f32 => "compare_lt_f32",
            Opcode::compare_gt_f32 => "compare_gt_f32",
            Opcode::compare_le_f32 => "compare_le_f32",
            Opcode::compare_ge_f32 => "compare_ge_f32",
            //
            Opcode::compare_eq_f64 => "compare_eq_f64",
            Opcode::compare_ne_f64 => "compare_ne_f64",
            Opcode::compare_lt_f64 => "compare_lt_f64",
            Opcode::compare_gt_f64 => "compare_gt_f64",
            Opcode::compare_le_f64 => "compare_le_f64",
            Opcode::compare_ge_f64 => "compare_ge_f64",
            //
            Opcode::add_i32 => "add_i32",
            Opcode::sub_i32 => "sub_i32",
            Opcode::add_imm_i32 => "add_imm_i32",
            Opcode::sub_imm_i32 => "sub_imm_i32",
            Opcode::mul_i32 => "mul_i32",
            Opcode::div_i32_s => "div_i32_s",
            Opcode::div_i32_u => "div_i32_u",
            Opcode::rem_i32_s => "rem_i32_s",
            Opcode::rem_i32_u => "rem_i32_u",
            //
            Opcode::add_i64 => "add_i64",
            Opcode::sub_i64 => "sub_i64",
            Opcode::add_imm_i64 => "inc_i64",
            Opcode::sub_imm_i64 => "dec_i64",
            Opcode::mul_i64 => "mul_i64",
            Opcode::div_i64_s => "div_i64_s",
            Opcode::div_i64_u => "div_i64_u",
            Opcode::rem_i64_s => "rem_i64_s",
            Opcode::rem_i64_u => "rem_i64_u",
            //
            Opcode::add_f32 => "add_f32",
            Opcode::sub_f32 => "sub_f32",
            Opcode::mul_f32 => "mul_f32",
            Opcode::div_f32 => "div_f32",
            //
            Opcode::add_f64 => "add_f64",
            Opcode::sub_f64 => "sub_f64",
            Opcode::mul_f64 => "mul_f64",
            Opcode::div_f64 => "div_f64",
            //
            Opcode::and => "and",
            Opcode::or => "or",
            Opcode::xor => "xor",
            Opcode::not => "not",
            //
            Opcode::leading_zeros_i32 => "leading_zeros_i32",
            Opcode::leading_ones_i32 => "leading_ones_i32",
            Opcode::trailing_zeros_i32 => "trailing_zeros_i32",
            Opcode::count_ones_i32 => "count_ones_i32",
            Opcode::shift_left_i32 => "shift_left_i32",
            Opcode::shift_right_i32_s => "shift_right_i32_s",
            Opcode::shift_right_i32_u => "shift_right_i32_u",
            Opcode::rotate_left_i32 => "rotate_left_i32",
            Opcode::rotate_right_i32 => "rotate_right_i32",
            // Opcode::i64_and => "i64.and",
            // Opcode::i64_or => "i64.or",
            // Opcode::i64_xor => "i64.xor",
            // Opcode::i64_not => "i64.not",
            Opcode::leading_zeros_i64 => "leading_zeros_i64",
            Opcode::leading_ones_i64 => "leading_ones_i64",
            Opcode::trailing_zeros_i64 => "trailing_zeros_i64",
            Opcode::count_ones_i64 => "count_ones_i64",
            Opcode::shift_left_i64 => "shift_left_i64",
            Opcode::shift_right_i64_s => "shift_right_i64_s",
            Opcode::shift_right_i64_u => "shift_right_i64_u",
            Opcode::rotate_left_i64 => "rotate_left_i64",
            Opcode::rotate_right_i64 => "rotate_right_i64",
            //
            Opcode::math_abs_i32 => "math_abs_i32",
            Opcode::math_neg_i32 => "math_neg_i32",
            Opcode::math_abs_i64 => "math_abs_i64",
            Opcode::math_neg_i64 => "math_neg_i64",
            //
            Opcode::math_abs_f32 => "math_abs_f32",
            Opcode::math_neg_f32 => "math_neg_f32",
            Opcode::math_copysign_f32 => "math_copysign_f32",
            Opcode::math_sqrt_f32 => "math_sqrt_f32",
            Opcode::math_min_f32 => "math_min_f32",
            Opcode::math_max_f32 => "math_max_f32",
            Opcode::math_ceil_f32 => "math_ceil_f32",
            Opcode::math_floor_f32 => "math_floor_f32",
            Opcode::math_round_half_away_from_zero_f32 => "math_round_half_away_from_zero_f32",
            Opcode::math_round_half_to_even_f32 => "math_round_half_to_even_f32",
            Opcode::math_trunc_f32 => "math_trunc_f32",
            Opcode::math_fract_f32 => "math_fract_f32",
            Opcode::math_cbrt_f32 => "math_cbrt_f32",
            Opcode::math_exp_f32 => "math_exp_f32",
            Opcode::math_exp2_f32 => "math_exp2_f32",
            Opcode::math_ln_f32 => "math_ln_f32",
            Opcode::math_log2_f32 => "math_log2_f32",
            Opcode::math_log10_f32 => "math_log10_f32",
            Opcode::math_sin_f32 => "math_sin_f32",
            Opcode::math_cos_f32 => "math_cos_f32",
            Opcode::math_tan_f32 => "math_tan_f32",
            Opcode::math_asin_f32 => "math_asin_f32",
            Opcode::math_acos_f32 => "math_acos_f32",
            Opcode::math_atan_f32 => "math_atan_f32",
            Opcode::math_pow_f32 => "math_pow_f32",
            Opcode::math_log_f32 => "math_log_f32",
            //
            Opcode::math_abs_f64 => "math_abs_f64",
            Opcode::math_neg_f64 => "math_neg_f64",
            Opcode::math_copysign_f64 => "math_copysign_f64",
            Opcode::math_sqrt_f64 => "math_sqrt_f64",
            Opcode::math_min_f64 => "math_min_f64",
            Opcode::math_max_f64 => "math_max_f64",
            Opcode::math_ceil_f64 => "math_ceil_f64",
            Opcode::math_floor_f64 => "math_floor_f64",
            Opcode::math_round_half_away_from_zero_f64 => "math_round_half_away_from_zero_f64",
            Opcode::math_round_half_to_even_f64 => "math_round_half_to_even_f64",
            Opcode::math_trunc_f64 => "math_trunc_f64",
            Opcode::math_fract_f64 => "math_fract_f64",
            Opcode::math_cbrt_f64 => "math_cbrt_f64",
            Opcode::math_exp_f64 => "math_exp_f64",
            Opcode::math_exp2_f64 => "math_exp2_f64",
            Opcode::math_ln_f64 => "math_ln_f64",
            Opcode::math_log2_f64 => "math_log2_f64",
            Opcode::math_log10_f64 => "math_log10_f64",
            Opcode::math_sin_f64 => "math_sin_f64",
            Opcode::math_cos_f64 => "math_cos_f64",
            Opcode::math_tan_f64 => "math_tan_f64",
            Opcode::math_asin_f64 => "math_asin_f64",
            Opcode::math_acos_f64 => "math_acos_f64",
            Opcode::math_atan_f64 => "math_atan_f64",
            Opcode::math_pow_f64 => "math_pow_f64",
            Opcode::math_log_f64 => "math_log_f64",
            //
            Opcode::end => "end",
            Opcode::block => "block",
            Opcode::break_ => "break",
            Opcode::recur => "recur",
            Opcode::block_jump_eqz => "block_jump_eqz",
            Opcode::block_not_eqz => "block_not_eqz",
            Opcode::break_not_eqz => "break_not_eqz",
            Opcode::recur_not_eqz => "recur_not_eqz",
            //
            Opcode::call => "call",
            Opcode::dyncall => "dyncall",
            Opcode::envcall => "envcall",
            Opcode::syscall => "syscall",
            Opcode::extcall => "extcall",
            //
            Opcode::panic => "panic",
            Opcode::unreachable => "unreachable",
            // Opcode::trap => "trap",
            // Opcode::capture => "capture",
            //
            Opcode::host_addr_local => "host_addr_local",
            Opcode::host_addr_local_offset => "host_addr_local_offset",
            Opcode::host_addr_data => "host_addr_data",
            Opcode::host_addr_data_offset => "host_addr_data_offset",
            Opcode::host_addr_heap => "host_addr_heap",
            Opcode::host_copy_heap_to_memory => "host_copy_heap_to_memory",
            Opcode::host_copy_memory_to_heap => "host_copy_memory_to_heap",
            Opcode::host_memory_copy => "host_memory_copy",
            Opcode::host_addr_function => "host_addr_function",
        }
    }
}
